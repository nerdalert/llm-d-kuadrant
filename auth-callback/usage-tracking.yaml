###############################################################################
# 1 · DEPLOYMENT
###############################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: usage-tracking
  namespace: llm-d
  labels:
    app: usage-tracking
spec:
  replicas: 1
  selector:
    matchLabels:
      app: usage-tracking
  template:
    metadata:
      labels:
        app: usage-tracking
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port:  "8080"
        prometheus.io/path:  "/metrics"
    spec:
      containers:
        - name: usage-tracking
          image: ghcr.io/nerdalert/usage-tracking:latest   # ← bump tag as you publish
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          env:
            - name: LOG_LEVEL
              value: debug          # set to "info" in prod
            - name: PPROF
              value: "true"         # expose /debug/pprof
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 5
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 256Mi
---
###############################################################################
# 2 · SERVICE  – named port (“http”) so ServiceMonitor can target it
###############################################################################
apiVersion: v1
kind: Service
metadata:
  name: usage-tracking
  namespace: llm-d
  labels:
    app: usage-tracking
spec:
  selector:
    app: usage-tracking
  ports:
    - name: http             # ← NEW
      protocol: TCP
      port: 80               # cluster-IP port
      targetPort: 8080       # container port
---
###############################################################################
# 3 · SERVICEMONITOR – lets the Prometheus Operator scrape our /metrics
###############################################################################
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: usage-tracking
  namespace: llm-d-monitoring          # <— SAME namespace as the Prometheus CR
spec:
  namespaceSelector:
    matchNames: ["llm-d"]              # tell Prometheus to scrape *llm-d* ns
  selector:
    matchLabels:
      app: usage-tracking    # must match the Service label
  endpoints:
    - port: http             # must match the port name above
      path: /metrics
      interval: 15s
